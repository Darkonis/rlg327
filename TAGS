
dungeon_maker.c,2639
#define DUMP_HARDNESS_IMAGES 17,318
# define rand_under(21,463
# define rand_range(25,606
# define UNUSED(26,679
typedef struct corridor_path 28,710
  heap_node_t *hn;hn29,741
  uint8_t pos[pos30,760
  uint8_t from[from31,778
  int32_t cost;32,797
} corridor_path_t;33,813
typedef enum dim 42,960
  dim_x,43,979
  dim_y,44,988
  num_dims45,997
} dim_t;46,1008
typedef int16_t pair_t[pair_t48,1018
#define DUNGEON_X 50,1053
#define DUNGEON_Y 51,1087
#define MIN_ROOMS 52,1121
#define MAX_ROOMS 53,1154
#define ROOM_MIN_X 54,1187
#define ROOM_MIN_Y 55,1220
#define ROOM_MAX_X 56,1253
#define ROOM_MAX_Y 57,1287
#define SAVE_DIR 58,1320
#define DUNGEON_SAVE_FILE 59,1361
#define DUNGEON_SAVE_SEMANTIC 60,1402
#define DUNGEON_SAVE_VERSION 61,1448
#define mappair(63,1483
#define mapxy(64,1540
#define hardnesspair(65,1575
#define hardnessxy(66,1642
typedef struct dungeon 82,1931
  uint32_t num_rooms;83,1956
  room_t *rooms;rooms84,1978
  terrain_type_t map[map85,1995
 uint8_t hardness[hardness95,2649
  distance_path_t *completePath[completePath96,2690
  distance_path_t *partialPath[partialPath97,2745
  uint32_t num_Monsters;98,2799
  pair_t pc;99,2824
  monster_t *mon;mon100,2837
} dungeon_t;102,2872
void init_Monster(104,2886
static uint32_t in_room(117,3145
static uint32_t adjacent_to_room(133,3536
static uint32_t is_open_space(141,3797
static int32_t corridor_path_cmp(146,3896
static void dijkstra_corridor(150,4046
static void dijkstra_corridor_inv(250,7784
#define hardnesspair_inv(303,9106
static int connect_two_rooms(353,11777
static int create_cycle(372,12429
static int connect_rooms(414,13994
int gaussian[gaussian427,14187
typedef struct queue_node 435,14343
  int x,436,14371
  int x, y;436,14371
  struct queue_node *next;next437,14383
} queue_node_t;438,14410
static int smooth_hardness(440,14427
static int empty_dungeon(599,18696
static int place_rooms(618,19072
static int make_rooms(655,20259
int gen_dungeon(678,20820
void render_dungeon(690,20963
void delete_dungeon(741,21848
void init_dungeon(747,21921
int write_dungeon_map(752,21978
int write_rooms(765,22207
uint32_t calculate_dungeon_size(785,22626
int makedirectory(792,22873
int write_dungeon(827,23509
int read_dungeon_map(890,25004
int read_rooms(913,25602
int calculate_num_rooms(966,27418
int read_dungeon(974,27658
int read_pgm(1053,29542
void usage(1138,31945
void generateCompleteDistances(1147,32154
void generatePartialDistances(1284,37722
void generateDistances(1451,44358
int roll_call(1457,44463
void populateDun(1476,44850
int main(1496,45235

dungeon_maker.h,649
#define DUNGEON_MAKER_H 2,24
#define DUNGEON_X 15,293
#define DUNGEON_Y 16,327
typedef struct distance_path 17,361
  heap_node_t *hn;hn18,392
  uint8_t pos[pos19,411
  uint8_t from[from20,429
  int32_t cost;21,448
} distance_path_t;22,464
typedef enum __attribute__ ((__packed__)) terrain_type 24,484
  ter_debug,25,541
  ter_wall,26,554
  ter_wall_immutable,27,566
  ter_floor,28,588
  ter_floor_room,29,601
  ter_floor_hall,30,619
} terrain_type_t;31,637
typedef int16_t pair_t[pair_t32,655
typedef struct room 33,682
  pair_t position;34,704
  pair_t size;35,723
} room_t;36,738
typedef struct dungeon dungeon_t;37,748

heap.c,1009
#undef min4,39
struct heap_node 6,51
  heap_node_t *next;next7,70
  heap_node_t *prev;prev8,91
  heap_node_t *parent;parent9,112
  heap_node_t *child;child10,135
  void *datum;datum11,157
  uint32_t degree;12,172
  uint32_t mark;13,191
#define splice_heap_node_lists(16,212
#define insert_heap_node_in_list(25,524
#define remove_heap_node_from_list(32,748
void print_heap_node(37,881
void print_heap(53,1203
void print_heap_node_list(70,1505
void heap_init(86,1704
void heap_node_delete(96,1940
void heap_delete(114,2244
heap_node_t *heap_insert(heap_insert125,2409
void *heap_peek_min(heap_peek_min145,2725
static void heap_link(150,2801
static void heap_consolidate(164,3123
void *heap_remove_min(heap_remove_min205,4056
int heap_combine(240,4590
static void heap_cut(269,5241
static void heap_cascading_cut(283,5522
int heap_decrease_key(297,5748
int heap_decrease_key_no_replace(311,5990
int32_t compare(335,6564
char *print_int(print_int340,6663
int main(349,6781

heap.h,245
# define HEAP_H2,15
typedef struct heap_node heap_node_t;11,114
typedef struct heap 13,153
  heap_node_t *min;min14,175
  uint32_t size;15,195
  int32_t (*compare)compare16,212
  void (*datum_delete)datum_delete17,269
} heap_t;18,301

macros.h,611
# define MACROS_H2,17
#  define dprintf(16,213
#  define dfprintf(17,256
#  define dprintf(19,320
#  define dfprintf(20,343
# define fieldwidth(23,382
# define exit(37,1201
# define fopen(42,1441
#  define malloc(76,3348
#  define calloc(92,4430
#  define strdup(107,5435
#  define free(117,6055
# define swap(125,6303
# define memswap(131,6415
# define structdup(137,6543
# define datacmp(144,6927
# define max2(153,7400
# define min2(160,7576
# define max 167,7752
# define min 168,7770
# define max3(170,7789
# define min3(171,7830
# define frand(173,7872
# define structdup(180,7984

monster.c,229
#define ERRATIC 8,102
#define SMART 9,122
#define TELE 10,140
#define TUNNEL 11,157
void init_Monster(19,206
void move(31,440
void randMove(60,945
void dumbMove(76,1277
void smartMove(101,1642
void preformMove(116,1988

monster.h,354
#define MONSTER_H2,18
#define ERRATIC 15,286
#define SMART 16,306
#define TELE 17,324
#define TUNNEL 18,341
typedef struct monster20,361
  uint8_t val;22,386
  pair_t pos;23,401
  uint8_t isErr;24,415
  uint8_t isSmart;25,432
  uint8_t isTele;26,451
  uint8_t isTun;27,469
  uint8_t speed;28,486
  uint8_t isSeen;29,503
} monster_t;31,582

dungeon.h,0
