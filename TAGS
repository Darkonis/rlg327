
dungeon_maker.c,2758
#define DUMP_HARDNESS_IMAGES 18,338
# define rand_under(22,483
# define rand_range(26,626
# define UNUSED(27,699
typedef struct corridor_path 29,730
  heap_node_t *hn;hn30,761
  uint8_t pos[pos31,780
  uint8_t from[from32,798
  int32_t cost;33,817
} corridor_path_t;34,833
typedef enum dim 43,980
  dim_x,44,999
  dim_y,45,1008
  num_dims46,1017
} dim_t;47,1028
typedef int16_t pair_t[pair_t49,1038
#define DUNGEON_X 51,1073
#define DUNGEON_Y 52,1107
#define MIN_ROOMS 53,1141
#define MAX_ROOMS 54,1174
#define ROOM_MIN_X 55,1207
#define ROOM_MIN_Y 56,1240
#define ROOM_MAX_X 57,1273
#define ROOM_MAX_Y 58,1307
#define SAVE_DIR 59,1340
#define DUNGEON_SAVE_FILE 60,1381
#define DUNGEON_SAVE_SEMANTIC 61,1422
#define DUNGEON_SAVE_VERSION 62,1468
#define mappair(64,1503
#define mapxy(65,1560
#define hardnesspair(66,1595
#define hardnessxy(67,1662
typedef struct dungeon 83,1951
  uint32_t num_rooms;84,1976
  room_t *rooms;rooms85,1998
  terrain_type_t map[map86,2015
 uint8_t hardness[hardness96,2669
  distance_path_t *completePath[completePath97,2710
  distance_path_t *partialPath[partialPath98,2765
  uint32_t num_Monsters;99,2819
  uint32_t cur_turn;100,2844
  uint32_t pc_speed;101,2865
  uint32_t pc_nturn;102,2886
  pair_t pc;103,2907
  monster_t *mon;mon104,2920
} dungeon_t;106,2955
void init_Monster(108,2969
static uint32_t in_room(121,3228
static uint32_t adjacent_to_room(137,3619
static uint32_t is_open_space(145,3880
static int32_t corridor_path_cmp(150,3979
static void dijkstra_corridor(154,4129
static void dijkstra_corridor_inv(254,7867
#define hardnesspair_inv(307,9189
static int connect_two_rooms(357,11860
static int create_cycle(376,12512
static int connect_rooms(418,14077
int gaussian[gaussian431,14270
typedef struct queue_node 439,14426
  int x,440,14454
  int x, y;440,14454
  struct queue_node *next;next441,14466
} queue_node_t;442,14493
static int smooth_hardness(444,14510
static int empty_dungeon(603,18779
static int place_rooms(622,19155
static int make_rooms(659,20342
int gen_dungeon(682,20903
void render_dungeon(694,21046
void delete_dungeon(745,21931
void init_dungeon(751,22004
int write_dungeon_map(756,22061
int write_rooms(769,22290
uint32_t calculate_dungeon_size(789,22709
int makedirectory(796,22956
int write_dungeon(831,23592
int read_dungeon_map(894,25087
int read_rooms(917,25685
int calculate_num_rooms(970,27501
int read_dungeon(978,27741
int read_pgm(1057,29625
void usage(1142,32028
void generateCompleteDistances(1151,32237
void generatePartialDistances(1288,37805
void generateDistances(1455,44441
int roll_call(1461,44546
void populateDun(1480,44933
void takeTurn(1500,45316
int main(1510,45499

dungeon_maker.h,649
#define DUNGEON_MAKER_H 2,24
#define DUNGEON_X 15,293
#define DUNGEON_Y 16,327
typedef struct distance_path 17,361
  heap_node_t *hn;hn18,392
  uint8_t pos[pos19,411
  uint8_t from[from20,429
  int32_t cost;21,448
} distance_path_t;22,464
typedef enum __attribute__ ((__packed__)) terrain_type 24,484
  ter_debug,25,541
  ter_wall,26,554
  ter_wall_immutable,27,566
  ter_floor,28,588
  ter_floor_room,29,601
  ter_floor_hall,30,619
} terrain_type_t;31,637
typedef int16_t pair_t[pair_t32,655
typedef struct room 33,682
  pair_t position;34,704
  pair_t size;35,723
} room_t;36,738
typedef struct dungeon dungeon_t;37,748

heap.c,1009
#undef min4,39
struct heap_node 6,51
  heap_node_t *next;next7,70
  heap_node_t *prev;prev8,91
  heap_node_t *parent;parent9,112
  heap_node_t *child;child10,135
  void *datum;datum11,157
  uint32_t degree;12,172
  uint32_t mark;13,191
#define splice_heap_node_lists(16,212
#define insert_heap_node_in_list(25,524
#define remove_heap_node_from_list(32,748
void print_heap_node(37,881
void print_heap(53,1203
void print_heap_node_list(70,1505
void heap_init(86,1704
void heap_node_delete(96,1940
void heap_delete(114,2244
heap_node_t *heap_insert(heap_insert125,2409
void *heap_peek_min(heap_peek_min145,2725
static void heap_link(150,2801
static void heap_consolidate(164,3123
void *heap_remove_min(heap_remove_min205,4056
int heap_combine(240,4590
static void heap_cut(269,5241
static void heap_cascading_cut(283,5522
int heap_decrease_key(297,5748
int heap_decrease_key_no_replace(311,5990
int32_t compare(335,6564
char *print_int(print_int340,6663
int main(349,6781

heap.h,245
# define HEAP_H2,15
typedef struct heap_node heap_node_t;11,114
typedef struct heap 13,153
  heap_node_t *min;min14,175
  uint32_t size;15,195
  int32_t (*compare)compare16,212
  void (*datum_delete)datum_delete17,269
} heap_t;18,301

macros.h,611
# define MACROS_H2,17
#  define dprintf(16,213
#  define dfprintf(17,256
#  define dprintf(19,320
#  define dfprintf(20,343
# define fieldwidth(23,382
# define exit(37,1201
# define fopen(42,1441
#  define malloc(76,3348
#  define calloc(92,4430
#  define strdup(107,5435
#  define free(117,6055
# define swap(125,6303
# define memswap(131,6415
# define structdup(137,6543
# define datacmp(144,6927
# define max2(153,7400
# define min2(160,7576
# define max 167,7752
# define min 168,7770
# define max3(170,7789
# define min3(171,7830
# define frand(173,7872
# define structdup(180,7984

monster.c,229
#define ERRATIC 8,102
#define SMART 9,122
#define TELE 10,140
#define TUNNEL 11,157
void init_Monster(19,206
void move(31,440
void randMove(60,945
void dumbMove(76,1277
void smartMove(101,1642
void preformMove(116,1988

monster.h,354
#define MONSTER_H2,18
#define ERRATIC 15,286
#define SMART 16,306
#define TELE 17,324
#define TUNNEL 18,341
typedef struct monster20,361
  uint8_t val;22,386
  pair_t pos;23,401
  uint8_t isErr;24,415
  uint8_t isSmart;25,432
  uint8_t isTele;26,451
  uint8_t isTun;27,469
  uint8_t speed;28,486
  uint8_t isSeen;29,503
} monster_t;31,582

dungeon.h,0
