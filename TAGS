
dungeon_maker.c,2989
#define DUMP_HARDNESS_IMAGES 16,258
# define rand_under(20,403
# define rand_range(24,546
# define UNUSED(25,619
typedef struct corridor_path 27,650
  heap_node_t *hn;hn28,681
  uint8_t pos[pos29,700
  uint8_t from[from30,718
  int32_t cost;31,737
} corridor_path_t;32,753
typedef struct distance_path 33,772
  heap_node_t *hn;hn34,803
  uint8_t pos[pos35,822
  uint8_t from[from36,840
  int32_t cost;37,859
} distance_path_t;38,875
typedef enum dim 41,896
  dim_x,42,915
  dim_y,43,924
  num_dims44,933
} dim_t;45,944
typedef int16_t pair_t[pair_t47,954
#define DUNGEON_X 49,989
#define DUNGEON_Y 50,1023
#define MIN_ROOMS 51,1057
#define MAX_ROOMS 52,1090
#define ROOM_MIN_X 53,1123
#define ROOM_MIN_Y 54,1156
#define ROOM_MAX_X 55,1189
#define ROOM_MAX_Y 56,1223
#define SAVE_DIR 57,1256
#define DUNGEON_SAVE_FILE 58,1297
#define DUNGEON_SAVE_SEMANTIC 59,1338
#define DUNGEON_SAVE_VERSION 60,1384
#define mappair(62,1419
#define mapxy(63,1476
#define hardnesspair(64,1511
#define hardnessxy(65,1578
typedef enum __attribute__ ((__packed__)) terrain_type 67,1624
  ter_debug,68,1681
  ter_wall,69,1694
  ter_wall_immutable,70,1706
  ter_floor,71,1728
  ter_floor_room,72,1741
  ter_floor_hall,73,1759
} terrain_type_t;74,1777
typedef struct room 76,1796
  pair_t position;77,1818
  pair_t size;78,1837
} room_t;79,1852
typedef struct dungeon 81,1863
  uint32_t num_rooms;82,1888
  room_t *rooms;rooms83,1910
  terrain_type_t map[map84,1927
  uint8_t hardness[hardness93,2580
  distance_path_t *completePath[completePath94,2622
  distance_path_t *partialPath[partialPath95,2677
  pair_t pc;97,2732
} dungeon_t;98,2745
static uint32_t in_room(100,2759
static uint32_t adjacent_to_room(116,3150
static uint32_t is_open_space(124,3411
static int32_t corridor_path_cmp(129,3510
static void dijkstra_corridor(133,3660
static void dijkstra_corridor_inv(233,7398
#define hardnesspair_inv(286,8720
static int connect_two_rooms(336,11391
static int create_cycle(355,12043
static int connect_rooms(397,13608
int gaussian[gaussian410,13801
typedef struct queue_node 418,13957
  int x,419,13985
  int x, y;419,13985
  struct queue_node *next;next420,13997
} queue_node_t;421,14024
static int smooth_hardness(423,14041
static int empty_dungeon(582,18310
static int place_rooms(601,18686
static int make_rooms(638,19873
int gen_dungeon(661,20434
void render_dungeon(673,20577
void delete_dungeon(709,21232
void init_dungeon(714,21289
int write_dungeon_map(719,21346
int write_rooms(732,21575
uint32_t calculate_dungeon_size(752,21994
int makedirectory(759,22241
int write_dungeon(794,22877
int read_dungeon_map(857,24372
int read_rooms(880,24970
int calculate_num_rooms(934,26787
int read_dungeon(942,27027
int read_pgm(1021,28911
void usage(1106,31314
void generateCompleteDistances(1115,31523
void generatePartialDistances(1252,37091
void generateDistances(1419,43727
int main(1424,43831

heap.c,1009
#undef min4,39
struct heap_node 6,51
  heap_node_t *next;next7,70
  heap_node_t *prev;prev8,91
  heap_node_t *parent;parent9,112
  heap_node_t *child;child10,135
  void *datum;datum11,157
  uint32_t degree;12,172
  uint32_t mark;13,191
#define splice_heap_node_lists(16,212
#define insert_heap_node_in_list(25,524
#define remove_heap_node_from_list(32,748
void print_heap_node(37,881
void print_heap(53,1203
void print_heap_node_list(70,1505
void heap_init(86,1704
void heap_node_delete(96,1940
void heap_delete(114,2244
heap_node_t *heap_insert(heap_insert125,2409
void *heap_peek_min(heap_peek_min145,2725
static void heap_link(150,2801
static void heap_consolidate(164,3123
void *heap_remove_min(heap_remove_min205,4056
int heap_combine(240,4590
static void heap_cut(269,5241
static void heap_cascading_cut(283,5522
int heap_decrease_key(297,5748
int heap_decrease_key_no_replace(311,5990
int32_t compare(335,6564
char *print_int(print_int340,6663
int main(349,6781

heap.h,245
# define HEAP_H2,15
typedef struct heap_node heap_node_t;11,114
typedef struct heap 13,153
  heap_node_t *min;min14,175
  uint32_t size;15,195
  int32_t (*compare)compare16,212
  void (*datum_delete)datum_delete17,269
} heap_t;18,301

macros.h,611
# define MACROS_H2,17
#  define dprintf(16,213
#  define dfprintf(17,256
#  define dprintf(19,320
#  define dfprintf(20,343
# define fieldwidth(23,382
# define exit(37,1201
# define fopen(42,1441
#  define malloc(76,3348
#  define calloc(92,4430
#  define strdup(107,5435
#  define free(117,6055
# define swap(125,6303
# define memswap(131,6415
# define structdup(137,6543
# define datacmp(144,6927
# define max2(153,7400
# define min2(160,7576
# define max 167,7752
# define min 168,7770
# define max3(170,7789
# define min3(171,7830
# define frand(173,7872
# define structdup(180,7984
